{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movies","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","props","state","isLoding","getMovies","a","axios","get","movies","data","setState","console","log","this","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TA8BeA,MA1Bf,YAA2D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACnD,OAAQ,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UAEVD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAG5E,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UCwJDC,G,wDAlDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,MAAQ,CACNC,UAAW,GANK,EASlBC,UATkB,sBASN,8BAAAC,EAAA,sEACkCC,IAAMC,IAAI,4DAD5C,gBACeC,EADf,EACHC,KAASA,KAASD,OAEzB,EAAKE,SAAS,CACZF,SAAQL,UAAW,IAErBQ,QAAQC,IAAI,EAAKV,OANP,2CAPVS,QAAQC,IAAI,OAFI,E,gEAmBhBC,KAAKT,c,+BAIE,IAAD,EAEuBS,KAAKX,MAA1BC,EAFF,EAEEA,SAAUK,EAFZ,EAEYA,OAGlB,OAFAG,QAAQC,IAAIJ,GAEL,6BAAShB,UAAU,aACvBW,EACC,yBAAKX,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACZgB,EAAOb,KAAI,SAAAa,GAAM,OACtB,kBAAC,EAAD,CACAV,IAAKU,EAAOtB,GACZA,GAAIsB,EAAOtB,GACPC,KAAMqB,EAAOrB,KACbC,MAAOoB,EAAOpB,MACdC,QAASmB,EAAOnB,QAChBC,OAAQkB,EAAOM,mBACfvB,OAAQiB,EAAOjB,kB,GA7CLwB,IAAMC,YC/GxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5d34b6e4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\nfunction Movies({id, year, title, summary, poster, genres}){\nreturn  <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"genres\">\n                {\n                    genres.map((genre, index) => <li key={index} className=\"movie__genres\">{genre}</li>)\n                }\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n            </div>\n        </div>;\n}\n\nMovies.propTypes = {\n    id : PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n   \n}\n\nexport default Movies;","import React from 'react'; \nimport axios from 'axios';\nimport Movies from './Movies';\nimport './App.css';\n  //1 TEST\n/*\nfunction Food({name, picture, rating}){ \n  return <div>\n    <h2> I like {name}</h2>\n    <h4>  {rating}/5.0</h4>\n    <img src={picture} />\n  </div>;\n}\n\nconst foodILike = [\n  { \n    id: 1,\n    name: \"a\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 5\n  },\n  {\n    id: 2,\n    name: \"b\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 4.5\n  },\n  {\n    id: 3,\n    name: \"c\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 7.9\n  }\n];\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n\nfunction App() {\n  return (\n    <div>\n      {\n        foodILike.map(dish => (\n          <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n        ))\n      }\n      \n    </div>\n  );\n}\n\n\n*/\n\n\n\n//// TEST 2\n/*\nclass App extends React.Component{\n\n  //class를 만들때 사용! \n  constructor(props){\n   \n    super(props);\n    console.log(\"class를 만들때 사용! 순서 : 1\")\n  }\n\n  componentDidMount(){\n    console.log(\"component rendered //rendering 후 출력\")\n  }\n\n  componentDidUpdate(){\n\n    console.log(\"I just updated\");\n  }\n\n  componentWillUnmount(){\n    console.log(\"component unmount@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n  }\n\n  //componentWillUpdate , componentWillReceiveProps는 사용하지 않음.\n\n  state = {\n    count : 0\n  }\n\n  plus = () => {\n    this.setState(current => ({count : current.count + 1}))\n  }\n  \n  minus = () => {\n    this.setState(current => ({count : current.count - 1}))\n  }\n\n  render(){\n    console.log(\"I m rendering  순서 : 2\");\n    return (\n      <div>\n        <h1>im a class component {this.state.count}</h1>\n        <button onClick={this.plus}>+</button>\n        <button onClick={this.minus}>-</button>\n      </div>\n    );\n  }\n\n}\n\n*/\n\n\n/// TEST 3\n\nclass App extends React.Component{\n\n  constructor(props){\n    super(props);\n    console.log(\"ddd\");\n  }\n\n  state = {\n    isLoding : true\n  }\n\n  getMovies = async () => {\n    const {data : { data : { movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n   \n    this.setState({\n      movies, isLoding : false\n    })\n    console.log(this.state);\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n \n\n  render(){\n\n    const { isLoding, movies } = this.state;\n    console.log(movies);\n\n    return <section className=\"container\">\n      {isLoding ? \n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      : \n      <div className=\"movies\">\n        {movies.map(movies => (\n    <Movies \n    key={movies.id} \n    id={movies.id} \n        year={movies.year} \n        title={movies.title} \n        summary={movies.summary}\n        poster={movies.medium_cover_image}\n        genres={movies.genres} />\n    ))}\n    </div> }\n      </section>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}