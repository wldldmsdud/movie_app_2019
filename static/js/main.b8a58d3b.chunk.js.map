{"version":3,"sources":["routes/About.js","components/Movies.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","className","Movies","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","console","log","isLoding","getMovies","a","axios","get","movies","data","setState","this","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAeeA,MAZf,SAAeC,GAGX,OACI,yBAAKC,UAAU,gBACX,gJ,0ECwCGC,MA1Cf,YAA2D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACnD,OACA,yBAAKP,UAAU,SACX,kBAAC,IAAD,CAAMQ,GAAI,CACNC,SAAU,eACVC,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,YAIA,yBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACX,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,iBAEVO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,GAAQD,OAGlD,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAE,KAA/C,WC0BDC,G,wDAhDb,WAAYnB,GAAO,IAAD,6BAChBoB,QAAQC,IAAI,MACZ,cAAMrB,IAGRW,MAAQ,CACNW,UAAW,GANK,EASlBC,UATkB,sBASN,8BAAAC,EAAA,sEACkCC,IAAMC,IAAI,4DAD5C,gBACeC,EADf,EACHC,KAASA,KAASD,OAEzB,EAAKE,SAAS,CACZF,SAAQL,UAAW,IAErBF,QAAQC,IAAI,EAAKV,OANP,2CATM,E,gEAoBhBmB,KAAKP,c,+BAGE,IAAD,EACuBO,KAAKnB,MAA1BW,EADF,EACEA,SAAUK,EADZ,EACYA,OAElB,OAAO,6BAAS1B,UAAU,aACvBqB,EACC,yBAAKrB,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACZ0B,EAAOb,KAAI,SAAAa,GAAM,OACtB,kBAAC,EAAD,CACAV,IAAKU,EAAOxB,GACZA,GAAIwB,EAAOxB,GACPC,KAAMuB,EAAOvB,KACbC,MAAOsB,EAAOtB,MACdC,QAASqB,EAAOrB,QAChBC,OAAQoB,EAAOI,mBACfvB,OAAQmB,EAAOnB,kB,GA3CJwB,IAAMC,Y,MCOVC,MARf,WAEI,OAAO,yBAAKjC,UAAU,OACd,kBAAC,IAAD,CAAMQ,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WCmBG0B,E,kLAtBPf,QAAQC,IAAIS,KAAK9B,OADF,MAGe8B,KAAK9B,MAA3BoC,EAHO,EAGPA,SAAUC,EAHH,EAGGA,aAEIC,IAAnBF,EAASzB,OACR0B,EAAQE,KAAK,O,+BAKZ,IAEGH,EAAaN,KAAK9B,MAAlBoC,SACR,OAAGA,EAASzB,MACD,6BAAMyB,EAASzB,MAAMN,OAErB,S,GAnBE2B,IAAMC,WC4HZO,MAZf,WACE,OACE,kBAAC,IAAD,KAEE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,kBAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW5C,IAChC,kBAAC,IAAD,CAAO0C,KAAK,gBAAgBE,UAAWR,MCpH7CS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b8a58d3b.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About(props)\n{\n\n    return (\n        <div className=\"about__inner\">\n            <span>\n                “Freedom is the freedom to say that two plus two make four. If that is granted, all else follows.”\n            </span>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n//import {  Link } from 'react-router-dom';\n\nfunction Movies({id, year, title, summary, poster, genres}){\nreturn  (\n<div className=\"movie\">\n    <Link to={{\n        pathname: \"movie-detail\",\n        state: {\n            year,\n            title,\n            summary,\n            poster,\n            genres\n        }\n    }}>\n\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie__data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"movie__genres\">\n                {\n                    genres.map((genre, index) => <li key={index}>{genre}</li>)\n                }\n                </ul>\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n            </div>\n        \n        \n        </Link>\n    </div>\n    \n)}\n\nMovies.propTypes = {\n    id : PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n   \n}\n\nexport default Movies;","import React from 'react'; \nimport axios from 'axios';\nimport Movies from '../components/Movies';\nimport './Home.css';\n\nclass Home extends React.Component{\n\n  constructor(props){\n    console.log(\"1\");\n    super(props);\n  }\n\n  state = {\n    isLoding : true\n  }\n\n  getMovies = async () => {\n    const {data : { data : { movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n   \n    this.setState({\n      movies, isLoding : false\n    })\n    console.log(this.state);\n  }\n\n  //컴포넌트가 마운트된 직후 사용!\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    const { isLoding, movies } = this.state;\n\n    return <section className=\"container\">\n      {isLoding ? \n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      : \n      <div className=\"movies\">\n        {movies.map(movies => (\n    <Movies \n    key={movies.id} \n    id={movies.id} \n        year={movies.year} \n        title={movies.title} \n        summary={movies.summary}\n        poster={movies.medium_cover_image}\n        genres={movies.genres} />\n    ))}\n    </div> }\n      </section>\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport './Navigation.css'\n\nfunction Navigation(){\n\n    return <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Detail extends React.Component{\n\n    componentDidMount(){\n        console.log(this.props);\n        \n        const { location, history } = this.props;\n\n        if(location.state === undefined){\n            history.push(\"/\");\n        }\n        \n    }\n\n    render(){\n\n        const { location } = this.props;\n        if(location.state){\n            return <div>{location.state.title}</div>\n        }else{\n            return null;\n        }\n        \n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\n//1 TEST\n/*\nfunction Food({name, picture, rating}){ \n  return <div>\n    <h2> I like {name}</h2>\n    <h4>  {rating}/5.0</h4>\n    <img src={picture} />\n  </div>;\n}\n\nconst foodILike = [\n  { \n    id: 1,\n    name: \"a\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 5\n  },\n  {\n    id: 2,\n    name: \"b\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 4.5\n  },\n  {\n    id: 3,\n    name: \"c\",\n    image: \"https://navi.kakaocdn.net/dn/navi/web/event/event-191112-01/kakaonavi_facebook.png\",\n    rating : 7.9\n  }\n];\n\nFood.propTypes = {\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n\nfunction App() {\n  return (\n    <div>\n      {\n        foodILike.map(dish => (\n          <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n        ))\n      }\n      \n    </div>\n  );\n}\n\n\n*/\n\n//// TEST 2\n/*\nclass App extends React.Component{\n\n  //class를 만들때 사용! \n  constructor(props){\n   \n    super(props);\n    console.log(\"class를 만들때 사용! 순서 : 1\")\n  }\n\n  componentDidMount(){\n    console.log(\"component rendered //rendering 후 출력\")\n  }\n\n  componentDidUpdate(){\n\n    console.log(\"I just updated\");\n  }\n\n  componentWillUnmount(){\n    console.log(\"component unmount@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n  }\n\n  //componentWillUpdate , componentWillReceiveProps는 사용하지 않음.\n\n  state = {\n    count : 0\n  }\n\n  plus = () => {\n    this.setState(current => ({count : current.count + 1}))\n  }\n  \n  minus = () => {\n    this.setState(current => ({count : current.count - 1}))\n  }\n\n  render(){\n    console.log(\"I m rendering  순서 : 2\");\n    return (\n      <div>\n        <h1>im a class component {this.state.count}</h1>\n        <button onClick={this.plus}>+</button>\n        <button onClick={this.minus}>-</button>\n      </div>\n    );\n  }\n\n}\n\n*/\n\n/// TEST 3\n\nfunction App() {\n  return (\n    <HashRouter>\n      {/*Navigation 내부에 있는 Link는 Router안에 있어야 한다. */}\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/Movie.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}